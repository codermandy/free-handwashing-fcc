{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\HowTo.svelte",
    "..\\..\\ProgressBar.svelte",
    "..\\..\\Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import Timer from \"./Timer.svelte\";\r\n    import HowTo from \"./HowTo.svelte\";\r\n    let audio;\r\n    function timerEnds(e) {\r\n      audio.play();\r\n    }\r\n  </script>\r\n  \r\n  <style>\r\n    h1,\r\n    h3 {\r\n      text-align: center;\r\n    }\r\n  </style>\r\n  \r\n  <h1>Handwashing App</h1>\r\n  \r\n  <Timer on:end={timerEnds} />\r\n  \r\n  <HowTo />\r\n  \r\n  <h3>\r\n    <a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\">\r\n      Picture Source\r\n    </a>\r\n  \r\n    <a href=\"https://freesound.org/people/metrostock99/sounds/345086/ \">\r\n      Sound Source\r\n    </a>\r\n  </h3>\r\n  \r\n  <!-- svelte-ignore a11y-media-has-caption -->\r\n  <audio bind:this={audio}>\r\n    <source src=\"ohyeah.wav\" />\r\n  </audio>",
    "<div bp=\"grid\">\r\n<img bp= \"offset-5@md 4@md 12@sm\"\r\n src = \"handwash.gif\" alt=\"How to wash our hands?\" />\r\n</div>\r\n<style>\r\nimg {\r\n    width : 100%;\r\n}\r\n</style>",
    "<script>\r\n    export let progress = 0;\r\n\r\n\r\n</script>\r\n<style>\r\n\r\n.progress-container {\r\n    margin:20px 0;\r\n    border: solid #316903 1.5gitpx;\r\n\r\n}\r\n\r\n.progress-bar {\r\n    height:30px;\r\n    background-color:rgb(96, 216, 96)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</style>\r\n\r\n\r\n\r\n    <div bp=\"grid\">\r\n    \r\n    <div bp=\"offset-5@md 4@md 12@s\"\r\n    class=\"progress-container\">\r\n    <div class=\"progress-bar\" style=\"width:{progress}%\">\r\n    <span class=\"sr-only\">{progress}%</span>\r\n    </div>\r\n</div>\r\n</div>",
    "<script>\r\n    import { createEventDispatcher } from \"svelte\";\r\n    import ProgressBar from \"./ProgressBar.svelte\";\r\n    const totalSeconds = 20;\r\n    let secondLeft = totalSeconds;\r\n    let isRunning = false;\r\n    $: progress = ((totalSeconds - secondLeft) / totalSeconds) * 100;\r\n    const dispatch = createEventDispatcher();\r\n    function startTimer() {\r\n      isRunning = true;\r\n      const timer = setInterval(() => {\r\n        secondLeft -= 1;\r\n        if (secondLeft == 0) {\r\n          clearInterval(timer);\r\n          isRunning = false;\r\n          secondLeft = totalSeconds;\r\n          dispatch(\"end\");\r\n        }\r\n      }, 1000);\r\n    }\r\n  </script>\r\n  \r\n  <style>\r\n    h2 {\r\n      margin: 0;\r\n    }\r\n    .start {\r\n      background-color: rgb(154, 73, 73);\r\n      width: 100%;\r\n      margin: 10px 0;\r\n    }\r\n    .start[disabled] {\r\n      background-color: rgb(194, 194, 194);\r\n      cursor: not-allowed;\r\n    }\r\n  </style>\r\n  \r\n  <div bp=\"grid\">\r\n    <h2 bp=\"offset-5@md 4@md 12@sm\">Seconds Left: {secondLeft}</h2>\r\n  </div>\r\n  <ProgressBar {progress} />\r\n  \r\n  <div bp=\"grid\">\r\n  \r\n    <button\r\n      disabled={isRunning}\r\n      on:click={startTimer}\r\n      bp=\"offset-5@md 4@md 12@sm\"\r\n      class=\"start\">\r\n      Start\r\n    </button>\r\n  \r\n  </div>"
  ],
  "names": [],
  "mappings": "AAUI,iBAAE,CACF,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,MAAM,AACpB,CAAC;ACRL,GAAG,cAAC,CAAC,AACD,KAAK,CAAG,IAAI,AAChB,CAAC;ACAD,mBAAmB,eAAC,CAAC,AACjB,OAAO,IAAI,CAAC,CAAC,CACb,MAAM,CAAE,KAAK,CAAC,OAAO,CAAC,QAAQ,AAElC,CAAC,AAED,aAAa,eAAC,CAAC,AACX,OAAO,IAAI,CACX,iBAAiB,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;AACrC,CAAC;ACOG,EAAE,cAAC,CAAC,AACF,MAAM,CAAE,CAAC,AACX,CAAC,AACD,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC,AACD,MAAM,CAAC,QAAQ,CAAC,cAAC,CAAC,AAChB,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,MAAM,CAAE,WAAW,AACrB,CAAC"
}